{
	"@namespaces": {
		"core": "core",
		"util": "contrib/utils"
	},

	"@aliases": {
		"ct": "core.Composite",
		"rpt": "core.Repeat",
		"iter": "core.Iteration",
		"jpar": "core.JsonParser",
		"cl": "util.CommandLine",
		"or": "util.OutputReport",
		"cron": "util.Cron"
	},
	"@version": "1.0",

	"@params": {
		"PROJECT_NAME": "$PROJECT_NAME"
	},

	"cl remote_pull_repo": {
		"@params": {
			"command":"cd ~/applications/{PROJECT_NAME}; git pull {checkoutBranchCmd}",
			"ssh":true
			},
		"@haltOnError": true 
	},

	"ct prepare": {
		"@description": "",
		"@params": {
			"PROJECT_NAME": "taskmator",
			"JENKINS_HOME":"/share/workspaces/jenkins/",
			"SERVICE_USER":"taskmator"
			"remoteLogin": "taskmator@deployserver",
			"sshKeyLocation": "~/.ssh/hostkey.pem"
		},

		"@execMode": "parallel",
		
		"@haltOnError": true,

		"@tasks": [
			{"@decl": "cl create_user", "@params": {"command":"sudo adduser --system --no-create-home --group ${SERVICE_USER}", "ssh":true},"@haltOnError": true },
	        {"@decl": "cl create_folders", "@params": {"command":"cd ~; mkdir applications; cd applications; mkdir log; mkdir backup", "ssh":true},"@haltOnError": true },
	        {"@decl": "cl clone_repo", "@params": {"command":"cd ~/applications; git clone ${branchArg} ${PROJECT_REPO_URL}", "ssh":true},"@haltOnError": true },
	        {"@decl": "cl change_group", "@params": {"command":"sudo chgrp -R ${SERVICE_USER} ~/applications", "ssh":true},"@haltOnError": true },
	        {"@decl": "cl register_service", "@params": {"command":"sudo cp ~/applications/${PROJECT_NAME}/bin/{APP_NAME}.conf.${APP_ENV} /etc/init/${APP_NAME}.conf", "ssh":true},"@haltOnError": true },
	        {"@decl": "cl start_service", "@params": {"command":"sudo start ${APP_NAME}", "ssh":true},"@haltOnError": true }
		]
	},

	"ct deploy": {
		"@description": "Pulls a repository",
		"@params": {
			"APP_NAME":"TEST_APP",
			"PROJECT_NAME":"$PROJECT_NAME",
			"SERVICE_USER":"taskmator",
			"CLOSURE_COMP": true,
			"remoteLogin": "taskmator@deployserver",
			"sshKeyLocation": "~/.ssh/hostkey.pem"
		},

		"@haltOnError": true,

		"@execMode": "sequential",
		"@tasks": [
	        {"@decl": "cl remote_service_stop", "@params": {"command":"sudo stop ${APP_NAME}", "ssh":true}, "@haltOnError": true },
	        {"@decl": "#root.remote_pull_repo"},
	        {"@decl": "cl remote_change_group", "@params": {"command":"sudo chgrp -R ${SERVICE_USER} ~/applications/${PROJECT_NAME}", "ssh":true},"@haltOnError": true },
	        {"@decl": "cl remote_restart_service", "@params": {"command":"sudo stop ${APP_NAME}; sudo start ${APP_NAME}", "ssh":true}, "@precond": "'${APP_NAME}'", "@haltOnError": true },
	        {"@decl": "cl remote_closure_comp", "@params": {"command":"cd ~/applications/${PROJECT_NAME}/js/; ./build.sh", "ssh":true}, "@precond": "'${CLOSURE_COMP}'", "@haltOnError": true },
	        {"@decl": "or report", "@params": {"command":"cd ~/applications/{PROJECT_NAME}/js/; ./build.sh", "ssh":true}, "@precond": "${CLOSURE_COMP}", "@haltOnError": true }
		]
	},

	"iter group_deploy": {
		"@description": "For all logins, does a pull_repo",
		"@params": {
			"LOGINS": ["taskmator@deployserver1,taskmator@deployserver2"]
		},

		"@for": "$remoteLogin in ${LOGINS}",

		"@exec": "#deploy"
	},

	"ct test": "proc_etime.task.json",

	"cron monitorprocess": {
		"@description": "Sample cron task",
		"@params": {
			"expression": "0 * * * * ",
			"task": "check_proc"
		},

		"@haltOnError": true,

		"@dependsOn": "prepare"
	},

	"ct proc_etime": {
	    "@description": "Sample cron task",
		"@params": {
			"PROC_NAME": "index.js"
		},

		"@haltOnError": true,

		"@execMode": "sequential",
		"@tasks": [
	        {"@decl": "cl get_pid", "@params": {"command":"pgrep ${PROC_NAME}"}, "@haltOnError": true },
	        {"@decl": "cl get_etime", "@params": {"PID": "${get_pid.outcome_result}", "command":"ps -p ${PID} -o etime="}, "@haltOnError": true }
		]
	},


	"@default":"monitorprocess" 
}