<%
    import re

    # Convert underscore to camelCase
    under_pat = re.compile(r'_([a-z])')
    def underscore_to_camel(text):
        return under_pat.sub(lambda x: x.group(1).upper(), text)

    def get_singular(name, capitalize = True):
        retval = name
        if (name[len(name)-1] == 's'):
            retval = name[0:len(name)-1]
        if (capitalize):
            retval = retval.capitalize();
        return retval

%><?php
/**
 * Models from schema: ${ model['schema-name'] } version ${ model['version'] }
 * Code generated by ${params['TASK_TYPE_NAME']}
 *
 */


% for entity_name, entity_def in model['entities'].iteritems():
/**
 * Add following line in app/routes.php
 * Route::resource('${entity_name}', '${get_singular(entity_name, True)}Controller');
 */
class ${get_singular(entity_name, True)}Controller extends \BaseController {

	protected $layout = 'layouts.master';

	/**
	 * Display a listing of the resource.
	 *
	 * @return Response
	 */
	public function index()
	{
		$records = ${get_singular(entity_name, True)}::all();
		$this->layout->content = View::make('${entity_name}.index')
		    ->with('records', $records);
	}

	/**
	 * Show the form for creating a new resource.
	 *
	 * @return Response
	 */
	public function create()
	{
		$this->layout->content = View::make('${entity_name}.create');
	}

	/**
	 * Store a newly created resource in storage.
	 *
	 * @return Response
	 */
	public function store()
	{
		//
	}

	/**
	 * Display the specified resource.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function show($id)
	{
		$record = ${get_singular(entity_name, True)}::find($id);

		// show the view and pass the nerd to it
		$this->layout->content = View::make('${entity_name}.show')
			->with('record', $record);
	}

	/**
	 * Show the form for editing the specified resource.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function edit($id)
	{
	    $record = ${get_singular(entity_name, True)}::find($id);

		$this->layout->content = View::make('${entity_name}.edit')
		    ->with('record', $record);
	}

	/**
	 * Update the specified resource in storage.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function update($id)
	{
		$data = Input::all();
        $record = ${get_singular(entity_name, True)}::find($id);
        $record->fill($data);
        $record->save();
	}

	/**
	 * Remove the specified resource from storage.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function destroy($id)
	{
		// delete
		$record = ${get_singular(entity_name, True)}::find($id);
		$record->delete();

		// redirect
		Session::flash('message', 'Successfully deleted!');
		return Redirect::to('${entity_name}');
	}
}
% endfor
