<%
    import re

    # Convert underscore to camelCase
    under_pat = re.compile(r'_([a-z])')
    def underscore_to_camel(text):
        return under_pat.sub(lambda x: x.group(1).upper(), text)

    def get_singular(name, capitalize = True):
        retval = name
        if (name[len(name)-1] == 's'):
            retval = name[0:len(name)-1]
        if (capitalize):
            retval = retval.capitalize();
        return retval

    # comma separated list of fillable fields
    def get_fillables(fields):
        fillables = []
        for field in fields:
            if (field['type'] == 'auto'):
                continue
            fillables.append(field['name'])
        return '\''+ '\',\''.join(fillables) + '\''

%><?php
/**
 * Models from schema: ${ model['schema-name'] } version ${ model['version'] }
 * Code generated by ${params['TASK_TYPE_NAME']}
 *
 */

% for entity_name, entity_def in model['entities'].iteritems():
class ${get_singular(entity_name, True)} extends Eloquent {

    /**
	 * The database table used by the model.
	 *
	 * @var string
	 */
    protected $table = '${entity_name}';

    /**
	 * The field list for mass assignment.
	 *
	 * @var array
	 */
    protected $fillable = array(${get_fillables(entity_def['fields'])});


% if ('relations' in entity_def):
% for relation in entity_def['relations']:
    public function ${relation['entity']}()
    {
        return $this->${underscore_to_camel(relation['kind'])}('${get_singular(relation['entity'], True)}');
    }
% endfor
% endif
}
% endfor
